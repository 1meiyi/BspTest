{
  "uid" : "59f62fcb8c72ea7",
  "name" : "test_01[iozone -r 1M -i 0 -i 1  -s 20G -I]",
  "fullName" : "Case.test_fio.TestIOzone#test_01",
  "historyId" : "1800ecaa154f528cbb1cc87e4fcc3d7a",
  "time" : {
    "start" : 1740126584886,
    "stop" : 1740126607821,
    "duration" : 22935
  },
  "status" : "broken",
  "statusMessage" : "TypeError: list indices must be integers or slices, not str",
  "statusTrace" : "self = <Case.test_fio.TestIOzone object at 0x000001545A1BCCD0>, cmd = 'iozone -r 1M -i 0 -i 1  -s 20G -I'\n\n    @pytest.mark.parametrize('cmd', [i[0] for i in data])\n    def test_01(self, cmd):\n        ioz_res = fp.send(cmd)\n>       fp.assert_Iozone(ioz_res)\n\nCase\\test_fio.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Utils.Base_init.BspTest object at 0x0000015459F57250>\nioz_res = '\\tIozone: Performance Test of File I/O\\n\\t        Version $Revision: 3.489 $\\n\\t\\tCompiled for 64 bit mode.\\n\\t\\tBuil...  3431263                                                                                  \\n\\niozone test complete.\\n'\n\n    def assert_Iozone(self, ioz_res):\n        dict_list = self.get_dict_result('a.csv')\n        # print(dict_list[\"write\"])\n        dict_list = list(dict_list.items())[4:-1]\n        history_res = re.findall('([0-9]{8})\\s+([0-9]{4})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})', ioz_res)\n        for i in history_res:\n            # print(i)\n>           ast = '{:.2}'.format(int(i[2]) / int(dict_list['write']))\nE           TypeError: list indices must be integers or slices, not str\n\nUtils\\Base_init.py:56: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: list indices must be integers or slices, not str",
    "statusTrace" : "self = <Case.test_fio.TestIOzone object at 0x000001545A1BCCD0>, cmd = 'iozone -r 1M -i 0 -i 1  -s 20G -I'\n\n    @pytest.mark.parametrize('cmd', [i[0] for i in data])\n    def test_01(self, cmd):\n        ioz_res = fp.send(cmd)\n>       fp.assert_Iozone(ioz_res)\n\nCase\\test_fio.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Utils.Base_init.BspTest object at 0x0000015459F57250>\nioz_res = '\\tIozone: Performance Test of File I/O\\n\\t        Version $Revision: 3.489 $\\n\\t\\tCompiled for 64 bit mode.\\n\\t\\tBuil...  3431263                                                                                  \\n\\niozone test complete.\\n'\n\n    def assert_Iozone(self, ioz_res):\n        dict_list = self.get_dict_result('a.csv')\n        # print(dict_list[\"write\"])\n        dict_list = list(dict_list.items())[4:-1]\n        history_res = re.findall('([0-9]{8})\\s+([0-9]{4})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})', ioz_res)\n        for i in history_res:\n            # print(i)\n>           ast = '{:.2}'.format(int(i[2]) / int(dict_list['write']))\nE           TypeError: list indices must be integers or slices, not str\n\nUtils\\Base_init.py:56: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a77043f4756cd1bb",
      "name" : "log",
      "source" : "a77043f4756cd1bb.txt",
      "type" : "text/plain",
      "size" : 1659
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Case"
  }, {
    "name" : "suite",
    "value" : "test_fio"
  }, {
    "name" : "subSuite",
    "value" : "TestIOzone"
  }, {
    "name" : "host",
    "value" : "Meiyi-EXT"
  }, {
    "name" : "thread",
    "value" : "5392-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Case.test_fio"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cmd",
    "value" : "'iozone -r 1M -i 0 -i 1  -s 20G -I'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "59f62fcb8c72ea7.json",
  "parameterValues" : [ "'iozone -r 1M -i 0 -i 1  -s 20G -I'" ]
}