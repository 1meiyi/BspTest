{"name": "test_01[iozone -r 1M -i 0 -i 1  -s 20G -I]", "status": "broken", "statusDetails": {"message": "KeyError: 'history'", "trace": "self = <Case.test_fio.TestIOzone object at 0x000001B0F05D1A90>\ncmd = 'iozone -r 1M -i 0 -i 1  -s 20G -I'\n\n    @pytest.mark.parametrize('cmd', [i[0] for i in data])\n    def test_01(self, cmd):\n        ioz_res = fp.send(cmd)\n>       res = fp.assert_Iozone(ioz_res)\n\ntest_fio.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Utils.Base_init.BspTest object at 0x000001B0F04D7B10>\nioz_res = '\\tIozone: Performance Test of File I/O\\n\\t        Version $Revision: 3.489 $\\n\\t\\tCompiled for 64 bit mode.\\n\\t\\tBuil...  2326691                                                                                  \\n\\niozone test complete.\\n'\n\n    def assert_Iozone(self, ioz_res):\n        dict_list = self.get_dict_result('a.csv')\n        history_res = re.findall('([0-9]{8})\\s+([0-9]{4})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})\\s+([0-9]{7})', ioz_res)\n        for i in history_res:\n            ast = '{:.2}'.format(int(i[2]) / int(dict_list['write']))\n            ast1 = '{:.2}'.format(int(i[3]) / int(dict_list['rewrite']))\n            ast2 = '{:.2}'.format(int(i[4]) / int(dict_list['read']))\n            ast3 = '{:.2}'.format(int(i[5]) / int(dict_list['reread']))\n            if float(ast) >= 0.95 and float(ast1) >= 0.95 and float(ast2) >= 0.95 and float(ast3) >= 0.95:\n                return self.log.info('断言成功', f'\\n历史数据{dict_list['history']}' + f'\\n测试数据：{history_res}')\n            else:\n>               return self.log.warning('断言失败', f'\\n历史数据{dict_list['history']}' + f'\\n测试数据：{history_res}')\nE               KeyError: 'history'\n\n..\\Utils\\Base_init.py:59: KeyError"}, "attachments": [{"name": "log", "source": "5c4e7914-d5fc-491f-b18e-26c9a6bd7981-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cmd", "value": "'iozone -r 1M -i 0 -i 1  -s 20G -I'"}], "start": 1740133664128, "stop": 1740133710625, "uuid": "c701d6c8-c985-4ac0-b64c-201675f7d321", "historyId": "1800ecaa154f528cbb1cc87e4fcc3d7a", "testCaseId": "01a55d7010f48ebe0c3cf2503891f546", "fullName": "Case.test_fio.TestIOzone#test_01", "labels": [{"name": "parentSuite", "value": "Case"}, {"name": "suite", "value": "test_fio"}, {"name": "subSuite", "value": "TestIOzone"}, {"name": "host", "value": "Meiyi-EXT"}, {"name": "thread", "value": "26840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Case.test_fio"}]}